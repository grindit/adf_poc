name: Deploy Azure Data Factory

inputs:
  arm_template_path:
    required: true
  arm_source_parameters_path:
    required: true
  arm_parameters_path:
    required: true
  adf_name:
    required: true
  resource_group:
    required: true
  artifact_name:
    required: true
  azure_credentials:
    required: true
  adf_additional_paramaters:
    required: true
  debug_mode:
    required: false
    default: false

runs:
  using: "composite"

  steps:
  - name: Download Artifact
    uses: actions/download-artifact@v4

  - name: List files(Debug)
    if: ${{ inputs.debug_mode == 'true' }}
    shell: pwsh
    run: |
      ls -R ${{ github.workspace }}

  - name: Show values(Debug)
    if: ${{ inputs.debug_mode == 'true' }}
    shell: pwsh
    run: |
      echo "arm_template_path: ${{ inputs.arm_template_path }}"
      echo "arm_parameters_path: ${{ inputs.arm_parameters_path }}"
      echo "adf_name: ${{ inputs.adf_name }}"
      echo "resource_group: ${{ inputs.resource_group }}"
      echo "artifact_name: ${{ inputs.artifact_name }}"
      echo "adf_additional_paramaters: ${{ inputs.adf_additional_paramaters }}"


  - name: Azure login
    uses: azure/login@v2
    with:
      creds: ${{ inputs.azure_credentials }}
      enable-AzPSSession: true 
  
  # Azure Powershell version of a script that stops the triggers in the ADF instead of using the data-factory-deploy-action (Alternative to the next step)
  # - name: Stop ADF Triggers
  #   uses: azure/powershell@v2
  #   with:
  #     inlineScript: | 
  #       $creds = ConvertFrom-Json '${{ inputs.azure_credentials }}'
  #       $securePassword = ConvertTo-SecureString $creds.clientSecret -AsPlainText -Force
  #       $credential = New-Object System.Management.Automation.PSCredential ($creds.clientId, $securePassword)
  #       Connect-AzAccount `
  #         -TenantId $creds.tenantId `
  #         -Credential $credential `
  #         -ServicePrincipal
  #       ./${{ inputs.artifact_name }}/PrePostDeploymentScript.ps1 -ArmTemplate "${{ inputs.arm_template_path }}" -ArmTemplateParameters "${{ inputs.arm_parameters_path }}" -ResourceGroupName "${{ inputs.resource_group }}" -DataFactoryName "${{ inputs.adf_name }}" -predeployment $true -deleteDeployment $false
  #     azPSVersion: 'latest'
  
  #Default approach. This action already runs pre and post deployment scripts.
  # - name: Compare ARM parameters files between DEV and Target environment
  #   shell: bash
  #   run: python ${{ github.workspace }}/scripts/compare-script.py -source ${{ inputs.arm_source_parameters_path }} -target ${{ inputs.arm_parameters_path }}

  # - name: data-factory-deploy
  #   uses: Azure/data-factory-deploy-action@v1.2.0
  #   with:
  #     resourceGroupName: ${{ inputs.resource_group }}
  #     dataFactoryName: ${{ inputs.adf_name }}
  #     armTemplateFile: ${{ inputs.arm_template_path }}
  #     armTemplateParametersFile: ${{ inputs.arm_parameters_path }}
  #     additionalParameters: '${{ inputs.adf_additional_paramaters }}' # (10) Parameters which will be replaced in the ARM template. Expected format 'key1=value key2=value keyN=value'. At the minimum here you should provide the target ADF name parameter. Check the ARMTemplateParametersForFactory.json file for all the parameters that are expected in your scenario  

  - name: Stop started triggers
      id: stop_triggers
      shell: pwsh
      run: |
        Write-Output "Stopping started triggers..."
        $triggers = az datafactory trigger list --resource-group ${{ inputs.resource_group }} --factory-name ${{ inputs.adf_name }} --query "[?properties.runtimeState=='Started'].name" -o tsv
        Write-Output "Started triggers: $triggers"
        echo "TRIGGERS=$triggers" | Out-File -FilePath $Env:GITHUB_ENV -Append
        foreach ($trigger in $triggers -split ' ') {
          az datafactory trigger stop --resource-group ${{ inputs.resource_group }} --factory-name ${{ inputs.adf_name }} --name $trigger
          Write-Output "Stopped $trigger"
        }

    - name: Deploy ADF using ARM Template
      shell: pwsh
      run: |
        az deployment group create --resource-group ${{ inputs.resource_group }} \
          --template-file ${{ inputs.arm_template_path }} \
          --parameters ${{ inputs.arm_parameters_path }} \
          --mode Incremental

    - name: Start previously stopped triggers
      shell: pwsh
      run: |
        $triggers = Get-Content $Env:GITHUB_ENV | Select-String -Pattern "TRIGGERS=" | ForEach-Object { $_.ToString().Split('=')[1] }
        if (-not [String]::IsNullOrWhiteSpace($triggers)) {
          foreach ($trigger in $triggers -split ' ') {
            az datafactory trigger start --resource-group ${{ inputs.resource_group }} --factory-name ${{ inputs.adf_name }} --name $trigger
            Write-Output "Started $trigger"
          }
        else {
          Write-Output "No triggers were previously started."
        }
