name: Deploy ADF Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        default: 'QA'


env:
  DEV_RESOURCE_GROUP: 'ADF_POC2'
  DEV_ADF_NAME: 'adf-sendfile-poc2'cc
  OUTPUT_PATH: 'ArmTemplateOutput'
  ARTIFACT_NAME: 'adf_artifact'

jobs:
  build-adf:
    runs-on: ubuntu-latest
    environment: DEV

    steps:
    - uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Extract Subscription ID from Azure Credentials
      shell: pwsh
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        $creds = $env:AZURE_CREDENTIALS | ConvertFrom-Json
        $subscriptionId = $creds.subscriptionId
        echo "Subscription ID: $subscriptionId"
        echo "SUBSCRIPTION_ID=$subscriptionId" >> $env:GITHUB_ENV

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install npm dependencies
      run: npm install

    - name: Build ADF files
      run: |
        npm run build export ${{ github.workspace }} /subscriptions/${{ env.SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }} ${{ env.OUTPUT_PATH }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.OUTPUT_PATH }}

  deploy-qa:
    runs-on: ubuntu-latest
    needs: build-adf
    if: github.event.inputs.environment == 'QA'
    environment: QA

    steps:
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Deploy QA
      uses: ./.github/templates/adf_deployment
      with:
        arm_template_path: ${{ github.workspace }}/${{ env.OUTPUT_PATH }}/ARMTemplateForFactory.json
        arm_parameters_path: ${{ github.workspace }}/environments/arm_parameters_qa.json
        resource_group: 'rg_test'
        adf_name: 'adf_test'
        azure_function_name: 'functiin_test'
        artifact_name: ${{ env.ARTIFACT_NAME }}
        azure_credentials: '${{ secrets.AZURE_CREDENTIALS }}'