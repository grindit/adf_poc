name: Deploy ADF Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        default: 'QA'


env:
  DEV_RESOURCE_GROUP: 'ADF_POC2'
  DEV_ADF_NAME: 'adf-sendfile-poc2'
  OUTPUT_PATH: 'ArmTemplateOutput'
  ARTIFACT_NAME: 'adf_artifact'

jobs:
  build-adf:
    runs-on: ubuntu-latest
    environment: DEV

    steps:
    - uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Extract Subscription ID from Azure Credentials
      shell: pwsh
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        $creds = $env:AZURE_CREDENTIALS | ConvertFrom-Json
        $subscriptionId = $creds.subscriptionId
        echo "Subscription ID: $subscriptionId"
        echo "SUBSCRIPTION_ID=$subscriptionId" >> $env:GITHUB_ENV

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install npm dependencies
      run: npm install

    - name: Build ADF files
      run: |
        npm run build export ${{ github.workspace }} /subscriptions/${{ env.SUBSCRIPTION_ID }}/resourceGroups/${{ env.DEV_RESOURCE_GROUP }}/providers/Microsoft.DataFactory/factories/${{ env.DEV_ADF_NAME }} ${{ env.OUTPUT_PATH }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.OUTPUT_PATH }}

  deploy-qa:
    runs-on: ubuntu-latest
    needs: build-adf
    if: github.event.inputs.environment == 'QA'
    environment: QA
    env:
      SECRET_NAMES: 'secret1,secret2'
      KEYVAULT_NAME: 'adf-poc-qa'
      ADF_NAME: 'adf-sendfile-poc3'
      AZURE_FUNCTION_NAME: 'adf-poc2-sendfile-qa'
      RESOURCE_GROUP: 'ADF_POC3'
      ADDITIONAL_PARAMETERS: >
        factoryName=${{ env.ADF_NAME }}
        AzureFunction1_functionKey=${{ secrets.AZ_FUNCTION_SEND_FILE_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

      - name: Fetch Secrets and Set Outputs
      id: fetch_secrets
      shell: pwsh
      run: |
        $secrets = "${{ env.SECRET_NAMES }}".Split(',')
        foreach ($secret_name in $secrets) {
          $secret_value = az keyvault secret show --name $secret_name --vault-name "${{ inputs.key_vault_name }}" --query value -o tsv
          # Use environment files to set outputs in PowerShell
          "$secret_name=$secret_value" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        }

    - name: Use Secret1
      shell: pwsh
      run: |
        echo "Secret1: ${{ steps.fetch_secrets.outputs.secret1 }}"

    - name: Deploy QA
      uses: ./.github/templates/adf_deployment
      with:
        arm_template_path: ${{ github.workspace }}/${{ env.ARTIFACT_NAME }}/ARMTemplateForFactory.json
        arm_parameters_path: ${{ github.workspace }}/environments/arm_parameters_qa.json
        resource_group: '${{ env.RESOURCE_GROUP }}'
        adf_name: '${{ env.ADF_NAME }}'
        azure_function_name: '${{ env.AZURE_FUNCTION_NAME }}'
        artifact_name: ${{ env.ARTIFACT_NAME }}
        azure_credentials: '${{ secrets.AZURE_CREDENTIALS }}'
        adf_additional_paramaters: '${{ env.ADDITIONAL_PARAMETERS }}'

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-adf
    if: github.event.inputs.environment == 'PROD'
    environment: PROD
    env:
      SECRET_NAMES: 'secret1,secret2'
      KEYVAULT_NAME: 'adf-poc-qa'
      ADF_NAME: 'adf-sendfile-poc3'
      AZURE_FUNCTION_NAME: 'adf-poc2-sendfile-qa'
      RESOURCE_GROUP: 'ADF_POC3'
      ADDITIONAL_PARAMETERS: >
        factoryName=${{ env.ADF_NAME }}
        AzureFunction1_functionKey=${{ secrets.AZ_FUNCTION_SEND_FILE_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

      - name: Fetch Secrets and Set Outputs
      id: fetch_secrets
      shell: pwsh
      run: |
        $secrets = "${{ env.SECRET_NAMES }}".Split(',')
        foreach ($secret_name in $secrets) {
          $secret_value = az keyvault secret show --name $secret_name --vault-name "${{ inputs.key_vault_name }}" --query value -o tsv
          # Use environment files to set outputs in PowerShell
          "$secret_name=$secret_value" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        }

    - name: Use Secret1
      shell: pwsh
      run: |
        echo "Secret1: ${{ steps.fetch_secrets.outputs.secret1 }}"

    - name: Deploy QA
      uses: ./.github/templates/adf_deployment
      with:
        arm_template_path: ${{ github.workspace }}/${{ env.ARTIFACT_NAME }}/ARMTemplateForFactory.json
        arm_parameters_path: ${{ github.workspace }}/environments/arm_parameters_qa.json
        resource_group: '${{ env.RESOURCE_GROUP }}'
        adf_name: '${{ env.ADF_NAME }}'
        azure_function_name: '${{ env.AZURE_FUNCTION_NAME }}'
        artifact_name: ${{ env.ARTIFACT_NAME }}
        azure_credentials: '${{ secrets.AZURE_CREDENTIALS }}'
        adf_additional_paramaters: '${{ env.ADDITIONAL_PARAMETERS }}'